(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{338:function(t,s,a){"use strict";a.r(s);var n=a(27),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认证"}},[t._v("#")]),t._v(" 认证")]),t._v(" "),s("h2",{attrs:{id:"密码的发展历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#密码的发展历史"}},[t._v("#")]),t._v(" 密码的发展历史")]),t._v(" "),s("ol",[s("li",[t._v("最初的明文密码，一开始认为是安全的-因为它作为凭证存储在数据库存储区中，但随着sql注入的增多，容易被攻击者获取")]),t._v(" "),s("li",[t._v("使用单向的hash加密存储，一开始：即使sql注入获取了加密后的密文，但无法在登陆时输入，获得了暂时的安全，随着攻击者采用存储彩虹表的方式，每次获取到hash密文后，从彩虹表中查询，以破解然后在登陆时输入查找到未单向加密的密码")]),t._v(" "),s("li",[t._v("为应对彩虹表，使用salt盐密码和明文密码一起存储，然后再通过hash加密，验证时通过hash密文和salt及明文一起对比。因为每个 salt 和密码组合的 hash 都是不同的。")]),t._v(" "),s("li",[t._v("在现代，一秒可以进行数十亿次的hash计算，这样hash加密又变得不安全了。")]),t._v(" "),s("li",[t._v("接着又鼓励使用自适应的单向函数工作因子，工作因子可以随着机器的变化而变化。从而解决了4中的安全问题。常用的自适应单向函数：bcrypt, PBKDF2, scrypt, and argon2.")]),t._v(" "),s("li",[t._v("spring security或其他框架都无法提升密码验证的效率，因为这个验证是资源密集化的。然后建议使用长期凭证换为短期凭证，短期凭证可以在不造成任何安全损失的情况下快速验证")])]),t._v(" "),s("h2",{attrs:{id:"tls、ssl、ca-证书、公钥、私钥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tls、ssl、ca-证书、公钥、私钥"}},[t._v("#")]),t._v(" TLS、SSL、CA 证书、公钥、私钥")]),t._v(" "),s("h2",{attrs:{id:"http-的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-的问题"}},[t._v("#")]),t._v(" HTTP 的问题")]),t._v(" "),s("p",[t._v("HTTP 协议是超文本传输协、HTTP 协议有一个缺陷那就是它是通过明文传输数据的，用户通过 HTTP 协议传输的内容很容易被恶意拦截，并且黑客可以伪装成服务端，向用户传送错误的信息，并且能轻易获取用户的隐私信息，而这些操作用户是完全无感知的。")]),t._v(" "),s("h2",{attrs:{id:"https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),s("p",[t._v("HTTPS 超文本传输安全协议、通过计算机网络进行安全通讯的传输协议。HTTPS 本质上还是由 HTTP 进行通信，只是在 HTTP 协议和 TCP 层之间增加了一个 SSL 的安全传输协议。")]),t._v(" "),s("p",[t._v("通过 HTTPS，客户端可以确认服务端的身份，保证数据在传输过程中不被篡改、")]),t._v(" "),s("p",[s("strong",[t._v("当我们在自己的浏览器上与某一个网站建立 HTTPS 连接的时候，满足如下情况可以表示这个服务端可以被信任：")])]),t._v(" "),s("ul",[s("li",[t._v("首先我们的操作系统中安装了正确且受信任的证书")]),t._v(" "),s("li",[t._v("浏览器本身正确实现了 HTTPS")]),t._v(" "),s("li",[t._v("被访问的网站提供了一个证书，这个证书是由一个操作系统所信任的证书颁发机构签发的，操作系统所信任的证书颁发机构一般都预装在操作系统中，通过第一步的方式可以查看。")]),t._v(" "),s("li",[t._v("被访问的网站所提供的证书被成功认证")])]),t._v(" "),s("h2",{attrs:{id:"tls-ssl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tls-ssl"}},[t._v("#")]),t._v(" TLS/SSL")]),t._v(" "),s("p",[t._v("SSL/TLS 是一种密码通信方案、SSL/TLS 涉及到了密码学中的对称加密、非对称加密、数字签名等等")]),t._v(" "),s("ul",[s("li",[t._v("SSL 全称是 Secure Socket Layer，中文译作安全套接层")]),t._v(" "),s("li",[t._v("TLS 全称是 Transport Layer Security，中文译作传输层安全。是 IETF 在 SSL3.0 基础上设计的协议")]),t._v(" "),s("li",[t._v("TLS 先后迭代了 TLS 1.0、TLS 1.1、TLS 1.2 和 TLS 1.3，目前被广泛使用的是 TLS 1.2 版本")])]),t._v(" "),s("h2",{attrs:{id:"对称加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对称加密"}},[t._v("#")]),t._v(" 对称加密")]),t._v(" "),s("p",[t._v("加密密钥和解密密钥是同一个，当浏览器和服务端需要进行通信的时候，约定好一个密钥，然后使用这个密钥对发送的消息进行加密，对方收到消息之后再使用相同的密钥对消息进行解密")]),t._v(" "),s("h2",{attrs:{id:"非对称加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密"}},[t._v("#")]),t._v(" 非对称加密")]),t._v(" "),s("p",[t._v("不对称加密是有一个密钥对公钥和私钥、客户端首先使用公钥对消息进行加密，服务端收到之后，再通过私钥对消息进行解密")]),t._v(" "),s("h2",{attrs:{id:"对称加密和非对称加密结合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对称加密和非对称加密结合"}},[t._v("#")]),t._v(" 对称加密和非对称加密结合")]),t._v(" "),s("ul",[s("li",[t._v("服务端会生成一个非对称加密的密钥对，私钥自己保存，公钥发送给客户端")]),t._v(" "),s("li",[t._v("客户端拿到这个公钥之后，再生成一个对称加密的密钥、然后把对称加密的密钥通过公钥进行加密，加密之后发送给服务端，服务端通过私钥进行解密")]),t._v(" "),s("li",[t._v("这样客户端和服务端就可以通过对称加密进行通信了")])]),t._v(" "),s("h2",{attrs:{id:"ca证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ca证书"}},[t._v("#")]),t._v(" CA证书")]),t._v(" "),s("p",[t._v("服务端要通过明文传输的方式把公钥发送给客户端，这个过程还是不安全的")]),t._v(" "),s("p",[t._v("数字证书是一个包含了目标网站各种信息如网站域名、证书有效期、签发机构、用于生成对称密钥的公钥、上级证书签发的签名等的文件，通过数字证书我们可以确认一个用户或者服务站点的身份。")]),t._v(" "),s("ul",[s("li",[t._v("实际场景中的数字证书是一系列的，形成了一个信任链，信任链的最顶端是 CA")]),t._v(" "),s("li",[t._v("CA 是 Certificate Authority 的简写，它是一个负责发放和管理数字的证书的第三方权威机构")]),t._v(" "),s("li",[t._v("CA 自己给自己颁发的用自己的私钥签名的证书称为根证书，根证书的私钥安全性至关重要，根证书的私钥都是被保存在离线计算机中，有严格的操作规章")]),t._v(" "),s("li",[t._v("一个用户想要获取一个证书，首先自己得有一个密钥对，私钥自己留着，公钥以及其他信息发送给 CA，向 CA 提出申请，CA 判明用户的身份之后，会将这个公钥和用户的身份信息绑定，并且为绑定后的信息进行签名（签名是通过 CA 根证书的私钥进行的），最后将签名后的证书发给申请者")]),t._v(" "),s("li",[t._v("一个用户想要鉴定一个证书的真伪，就通过 CA 的公钥对证书上的数字签名进行验证，验证通过，就认为这个这个证书是有效的。")])]),t._v(" "),s("h2",{attrs:{id:"单向https和双向https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单向https和双向https"}},[t._v("#")]),t._v(" 单向https和双向https")]),t._v(" "),s("p",[s("strong",[t._v("单向https")]),t._v("\n首先建立链接  -> 验证服务端身份 -> 用服务端公钥加密得到后期通信用的密钥 -> 服务端用私钥解密，拿到密钥 - ->  双方使用密钥通信")]),t._v(" "),s("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/security/singlehttps.png",alt:"png"}}),t._v(" "),s("p",[s("strong",[t._v("双向https")]),t._v("\n首先建立连接 -> 验证服务端身份->验证客户端身份->客户端发送加密方案->服务端用客户端公钥加密，选择方案->客户端拿到方案，用服务端公钥加密密文->服务端解密，拿到密文->双方使用密文通信")]),t._v(" "),s("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/security/doublehttps.png",alt:"png"}}),t._v(" "),s("h2",{attrs:{id:"springboot-nginx配置https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot-nginx配置https"}},[t._v("#")]),t._v(" springboot+nginx配置https")]),t._v(" "),s("p",[t._v("其中springboot是单向https，nginx是双向https，vue的资源是客户端，nginx需要实现双向https")]),t._v(" "),s("p",[t._v("具体流程：\n1.springboot开启https")]),t._v(" "),s("ul",[s("li",[s("p",[t._v('生成证书\nkeytool -genkey -alias myhttps -keyalg RSA -keysize 2048 -validity 36500 -keystore  "D:/tmp/ssl/myhttps.keystore"\n命令：keytool -genkey -alias testhttps -keyalg RSA -keysize 2048 -validity 36500 -keystore  "D:/tmp/ssl/testhttps.keystore"')])]),t._v(" "),s("li",[s("p",[t._v("命令解释:\n• -genkey 表示要创建一个新的密钥。")])])]),t._v(" "),s("p",[t._v("• -alias 表示 keystore 的别名。")]),t._v(" "),s("p",[t._v("• -keyalg 表示使用的加密算法是 RSA。")]),t._v(" "),s("p",[t._v("• -keysize 表示密钥的长度．。")]),t._v(" "),s("p",[t._v("• -keystore 表示生成的密钥存放位直。")]),t._v(" "),s("p",[t._v("• -validity 表示密钥的有效时间，单位为天。")]),t._v(" "),s("ul",[s("li",[t._v("将目录下的myhttps.keystore文件移动到resource下面")]),t._v(" "),s("li",[t._v("配置文件")])]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9987")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("non-ssl-port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8089")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用于 非ssl请求 强制转成 ssl 请求")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当使用 访问地址：http://127.0.0.1:8089/hello 访问时 后台会 将请求 转换成 https://127.0.0.1:9987/hello")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  servlet:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    context-path: /ssl-service")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ssl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key-store")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" classpath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("myhttps.keystore  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#类路径下的自签证书")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key-alias")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myhttps "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 证书别名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key-store-password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#证书密码")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key-store-type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" JKS "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 证书类型")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启证书验证")]),t._v("\n")])])]),s("p",[t._v("2.nginx配置双向https")]),t._v(" "),s("ul",[s("li",[t._v("openssl genrsa -des3 -out server.key 2048  创建服务器私钥")]),t._v(" "),s("li",[t._v("openssl req -new -key server.key -out server.csr  创建CSR证书请求文件")]),t._v(" "),s("li",[t._v("openssl rsa -in server.key -out server.key  去掉私钥文件的密码")]),t._v(" "),s("li",[t._v("openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt    使用服务器私钥签署服务器公钥证书")])]),t._v(" "),s("p",[t._v("修改nginx.conf")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("# 二级路由跳转、接口代理、https信任自签证书\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        server_name  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v("."),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("43.20")]),t._v(";\n\n        listen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v(" ssl;        # 监听"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("端口"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 开启ssl(必须)\n\n        # 引用ssl证书(必须"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("如果放在nginx/conf/ssl下可以用相对路径"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("其他位置必须用绝对路径)\n        ssl_certificate   ../ssl/server.crt;\n        ssl_certificate_key ../ssl/server.key;\n\n        # 协议优化(可选"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("优化https协议"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("增强安全性)\n        ssl_protocols    TLSv1 TLSv1."),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" TLSv1."),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(";\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("HIGH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("!aNULL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("!MD5"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("!RC4"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("!DHE;\n        ssl_prefer_server_ciphers on;\n        ssl_session_cache  shared"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("SSL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("10m;\n        ssl_session_timeout 10m;\n\n        # 二级路由跳转\n        location /ayyingyong20221119 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            try_files $uri $uri/ /ayyingyong20221119/index.html;\n            index index.html;\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        # 当遇到/api （也就是我们的接口）对其进行反向代理\n        location /ayyingyong20221119/api "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_pass https"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//localhost:9090/ayyingyong20221119/api;")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"认证-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认证-2"}},[t._v("#")]),t._v(" 认证")]),t._v(" "),s("h2",{attrs:{id:"授权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#授权"}},[t._v("#")]),t._v(" 授权")]),t._v(" "),s("h2",{attrs:{id:"框架-spring-security"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#框架-spring-security"}},[t._v("#")]),t._v(" 框架 spring security")]),t._v(" "),s("p",[t._v("SpringSecurity 是一个提供身份验证、授权和防止常见攻击的框架。")]),t._v(" "),s("h3",{attrs:{id:"入门案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#入门案例"}},[t._v("#")]),t._v(" 入门案例")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("1. 添加依赖\n")])])]),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-parent"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.4.2"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("relativePath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-web"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- ... other dependency elements ... --\x3e")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-security"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.projectlombok"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("lombok"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("2. 创建启动类和测试用Controller\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootApplication")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CheneySecurityApplication")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CheneySecurityApplication")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"登陆校验流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#登陆校验流程"}},[t._v("#")]),t._v(" 登陆校验流程")]),t._v(" "),s("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/security/image-20211215094003288.png",alt:"png"}}),t._v(" "),s("p",[t._v("前端                                        后端\n-----1.携带用户名和密码访问登陆接口--\x3e             2.和数据库中的用户名和密码进行校验\n--\x3e   3.如果正确，使用用户名/用户ID，生成一个jwt\n<-- 4.把jwt响应给前端\n---5.登陆后访问其他请求需要在请求头中携带token--\x3e  6.获取请求头中的token进行解析，获取userID\n7.根据用户ID获取用户信息，如果有权限则允许访问相关的资源\n<------9.响应信息----                            8.访问目标资源，响应给前端")]),t._v(" "),s("blockquote",[s("p",[t._v("JWT (全称：Json Web Token)是一个开放标准(RFC 7519)，它定义了一种紧凑的、自包含的方式，用于作为 JSON 对象在各方之间安全地传输信息。该信息可以被验证和信任，因为它是数字签名的。")])]),t._v(" "),s("h3",{attrs:{id:"spring-security大致流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-security大致流程"}},[t._v("#")]),t._v(" spring security大致流程")]),t._v(" "),s("h4",{attrs:{id:"security-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#security-原理"}},[t._v("#")]),t._v(" security 原理")]),t._v(" "),s("p",[t._v("SpringSecurity的原理其实就是一个过滤器链，内部包含了提供各种功能的过滤器。这里我们可以看看入门案例中的过滤器。")]),t._v(" "),s("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/security/image-20211214144425527.png",alt:"png"}}),t._v(" "),s("h4",{attrs:{id:"认证流程详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认证流程详解"}},[t._v("#")]),t._v(" 认证流程详解")]),t._v(" "),s("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/security/image-20211214151515385.png",alt:"png"}}),t._v(" "),s("p",[t._v("请求 --\x3e UsernamePasswordAuthenticationFilter(用户名密码认证校验过滤器) --\x3e ExceptionTranslationFilter(异常AccessDeniedException和AuthenticationException处理过滤器) --\x3e FilterSecurityInterceptor(权限校验过滤器)")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("断点调试查看过滤器链")])]),t._v(" "),s("blockquote",[s("p",[t._v("main方法处添加返回值ConfigurableApplicationContext-> 然后断点，在断点窗口点击Evaluate-> 通过run.getBean(DefaultSecurityFilterChain.class) 回车，查看filters过滤器链")])])]),t._v(" "),s("li",[s("p",[t._v("采用自己的验证方式，不使用内存校验")]),t._v(" "),s("ol",[s("li",[t._v("自定义登陆接口 调用ProviderManager的方法进行认证，认证通过生成jwt，把用户信息存到redis")]),t._v(" "),s("li",[t._v("自定义UserDetailService 实现查询数据库校验用户")]),t._v(" "),s("li",[t._v("校验： 自定义jwt过滤器， 获取token，解析token获取userId，从redis中获取用户信息，存入SecurityContextHolder")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);