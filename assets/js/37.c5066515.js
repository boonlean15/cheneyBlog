(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{348:function(t,a,s){"use strict";s.r(a);var r=s(27),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"学习并发编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习并发编程"}},[t._v("#")]),t._v(" 学习并发编程")]),t._v(" "),a("p",[t._v("技术背后的理论和模型同样重要，坚持学习是一个难能可贵的天赋")]),t._v(" "),a("h2",{attrs:{id:"管程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管程"}},[t._v("#")]),t._v(" 管程")]),t._v(" "),a("p",[t._v("管程是一种解决并发问题的模型 synchronized、wait、notify、condition等是管程模型的一种实现而已")]),t._v(" "),a("h2",{attrs:{id:"分工、同步、互斥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分工、同步、互斥"}},[t._v("#")]),t._v(" 分工、同步、互斥")]),t._v(" "),a("p",[t._v("并发编程三个核心问题：分工、同步、互斥")]),t._v(" "),a("ul",[a("li",[t._v("分工 fork/join")]),t._v(" "),a("li",[t._v("同步 CountDownLatch")]),t._v(" "),a("li",[t._v("互斥 可重入锁")])]),t._v(" "),a("blockquote",[a("p",[t._v("java sdk并发包大部分都是按照这三个维度组织的")])]),t._v(" "),a("img",{attrs:{width:"600",src:"https://boonlean15.github.io/cheneyBlog/images/javaconcurrent/general.jpg",alt:"jpg"}}),t._v(" "),a("h1",{attrs:{id:"如何学好并发编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何学好并发编程"}},[t._v("#")]),t._v(" 如何学好并发编程")]),t._v(" "),a("ul",[a("li",[t._v("跳出来，看全景  分工、同步、互斥")]),t._v(" "),a("li",[t._v("钻进去，看本质  技术后面的理论基础")])])])}),[],!1,null,null,null);a.default=v.exports}}]);