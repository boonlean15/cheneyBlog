(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{390:function(t,a,s){"use strict";s.r(a);var n=s(27),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[t._v("#")]),t._v(" 集合")]),t._v(" "),a("p",[t._v("priorityQueue 可用于任务执行，执行优先级最高的任务(每次添加都把最小的元素放在了根部)")]),t._v(" "),a("p",[a("strong",[t._v("LinkedHashMap 最近最少使用非常有用(根据访问顺序，而非添加顺序)")])]),t._v(" "),a("p",[a("strong",[t._v("可以set操作的称为可修改的集合，可以add或者remove的称为可改变大小")])]),t._v(" "),a("blockquote",[a("p",[t._v("不可变集合--Arrays和Collections获取的视图集合，不能add和remove，Arrays和Collections获取的subList子范围，不能clear，否则unSupportOperationException")])]),t._v(" "),a("blockquote",[a("p",[t._v("可remove不可add--一些集合的keyset，values，entrySet，只可以删除不能添加")])]),t._v(" "),a("ul",[a("li",[t._v("集合框架---常用的一些集合\n"),a("ul",[a("li",[t._v("ArrayList-数组列表")]),t._v(" "),a("li",[t._v("LinkedList-链表列表")]),t._v(" "),a("li",[t._v("HashMap-哈希键值对")]),t._v(" "),a("li",[t._v("TreeMap-红黑树Map")]),t._v(" "),a("li",[t._v("PriorityQueue-优先级队列")]),t._v(" "),a("li",[t._v("LinkedHashMap-链表哈希键值对")]),t._v(" "),a("li",[t._v("ArrayDueue-数组双端队列")])])])]),t._v(" "),a("h2",{attrs:{id:"_1-集合框架中的类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-集合框架中的类"}},[t._v("#")]),t._v(" 1.集合框架中的类")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection1.jpg",alt:"jpg"}}),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection2.jpg",alt:"jpg"}}),t._v(" "),a("h2",{attrs:{id:"_2-具体的集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-具体的集合"}},[t._v("#")]),t._v(" 2.具体的集合")]),t._v(" "),a("h3",{attrs:{id:"_1-数组列表-arraylist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-数组列表-arraylist"}},[t._v("#")]),t._v(" 1.数组列表 ArrayList")]),t._v(" "),a("p",[t._v("当需要快速访问集合的元素，选用ArrayList  如果需要同步使用Vector")]),t._v(" "),a("h3",{attrs:{id:"_2-链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-链表"}},[t._v("#")]),t._v(" 2.链表")]),t._v(" "),a("p",[t._v("如果需要插入和删除的操作比较频繁，并且集合比较大，选用链表集合")]),t._v(" "),a("blockquote",[a("p",[t._v("结构图：")])]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection3.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_3-散列集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-散列集合"}},[t._v("#")]),t._v(" 3.散列集合")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection4.jpg",alt:"jpg"}}),t._v(" "),a("ul",[a("li",[t._v("左边是桶，链表是桶对应存放的对象链表")]),t._v(" "),a("li",[t._v("对象存放在哪个桶  ==   对象的散列值%桶的数量  取余")]),t._v(" "),a("li",[t._v("如果桶中没有数据，直接插入，如果桶中对象满了- --\x3e 散列冲突　　(java 8 中，桶中对象满时，会从链表变成平衡二叉树)")]),t._v(" "),a("li",[t._v("减少散列冲突 ： 1. 设置桶数 一般设置为要填充的个数的75%-150%  2.填充因子0.75，如果填入元素超过了75%，则会再散列，双倍桶数进行再散列")]),t._v(" "),a("li",[t._v("标准类库使用的桶数是2的幂，默认值是16")])]),t._v(" "),a("h3",{attrs:{id:"_4-树集-treeset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-树集-treeset"}},[t._v("#")]),t._v(" 4.树集 treeset")]),t._v(" "),a("p",[a("strong",[t._v("有序集合")]),t._v(" -- 按红黑树结构实现，插入的元素都查找到指定位置，然后add，add的速度比hashset要慢")]),t._v(" "),a("p",[t._v("如果集合的元素有n，新插入的元素大概需要log2N次比较(如果N 等于1000 ，那么大概需要10次， log2N--- 2的多少次幂等于N)")]),t._v(" "),a("blockquote",[a("p",[t._v("前提：要使用树集，元素必须可以比较，需要实现Comparable接口")])]),t._v(" "),a("h3",{attrs:{id:"_5-队列与双端队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-队列与双端队列"}},[t._v("#")]),t._v(" 5.队列与双端队列")]),t._v(" "),a("p",[t._v("队列，双端队列可以在头部或者尾部添加和删除元素")]),t._v(" "),a("ul",[a("li",[t._v("ArrayDeque")]),t._v(" "),a("li",[a("ul",[a("li",[t._v("ArrayDeque()")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("ArrayDeque(int initialCapacty)")])])]),t._v(" "),a("li",[a("ul",[a("li",[a("blockquote",[a("p",[t._v("用初始容量16或者给定的初始容量构造一个无限的双端队列")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_6-优先级队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-优先级队列"}},[t._v("#")]),t._v(" 6.优先级队列")]),t._v(" "),a("p",[t._v("PriorityQueue 优先级队列，总会获取优先级队列中最小的元素")]),t._v(" "),a("blockquote",[a("p",[t._v("迭代并不按照元素的排列顺序，实际上是没有排序，只是每次添加都把最小的元素放在了根部，使用堆(heap)一种二叉树")])]),t._v(" "),a("p",[a("strong",[t._v("优先级队列可以用来存放任务，然后每次获取优先级最高的任务执行")])]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection5.jpg",alt:"jpg"}}),t._v(" "),a("h2",{attrs:{id:"_3-映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-映射"}},[t._v("#")]),t._v(" 3.映射")]),t._v(" "),a("h3",{attrs:{id:"_1-基本映射操作-hashmap-treemap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本映射操作-hashmap-treemap"}},[t._v("#")]),t._v(" 1.基本映射操作 hashMap treeMap")]),t._v(" "),a("ul",[a("li",[t._v("如果不需要对键进行排列，使用hashMap，它比treemap快")]),t._v(" "),a("li",[t._v("treemap用键的整体顺序对元素进行排序")])]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection6.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_2-更新映射项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-更新映射项"}},[t._v("#")]),t._v(" 2.更新映射项")]),t._v(" "),a("ul",[a("li",[t._v('map.merge("key", 2, Integer::sum);//如果key无值，设置为2，如果有，加上2')]),t._v(" "),a("li",[t._v("map.compute();如果key不存在会报空指针异常，merge不会")]),t._v(" "),a("li",[a("code",[t._v("map的键值都可为null，compute、computeIfAbent、computeIfPresent、merge都是对键进行更新的操作")])])]),t._v(" "),a("h3",{attrs:{id:"_3-映射视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-映射视图"}},[t._v("#")]),t._v(" 3.映射视图")]),t._v(" "),a("p",[t._v("3种视图:")]),t._v(" "),a("ul",[a("li",[t._v("Set"),a("K",[t._v(" keySet()")])],1),t._v(" "),a("li",[t._v("Collection"),a("V",[t._v(" values()")])],1),t._v(" "),a("li",[t._v("Set<Map.Entry<K,V>> entrySet()")])]),t._v(" "),a("p",[t._v("可以在视图迭代器调用remove方法，不过不能增加元素")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection7.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_4-弱散列映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-弱散列映射"}},[t._v("#")]),t._v(" 4. 弱散列映射")]),t._v(" "),a("p",[t._v("weakhashmap 使用弱引用保存键，某个对象只由弱引用，垃圾回收回收它，但要放入队列，weakhashmap周期性的检查队列，以便找出新的弱引用，然后删除对应的条目")]),t._v(" "),a("h3",{attrs:{id:"_5-链接散列集和映射-linkedhashset-linkedhashmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-链接散列集和映射-linkedhashset-linkedhashmap"}},[t._v("#")]),t._v(" 5.链接散列集和映射  LinkedHashSet LinkedHashMap")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection8.jpg",alt:"jpg"}}),t._v(" "),a("p",[t._v("LinkedhashMap，如果添加元素后，直接遍历或者使用迭代器，那么按添加后的顺序打印出来")]),t._v(" "),a("blockquote",[a("p",[t._v("LinkedHashMap将按访问顺序而不是插入顺序对条目进行迭代，从第二次访问可以看到，每次get或者put的条目会被放到末尾  --- LinkedHashMap对最近最少使用原则十分重要")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testLinkedHashMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkedHashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" linkedHashMap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkedHashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.75F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        linkedHashMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"144-25-5464"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Amy Lee"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        linkedHashMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"567-24-2546"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Harry Hacker"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        linkedHashMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"157-62-7935"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gary Cooper"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        linkedHashMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"456-62-5527"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Francesca Cruz"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"linkedHashMap --- "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" linkedHashMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        linkedHashMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k --- "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" --- v ----"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" linkedHashMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"567-24-2546"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s --- "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"linkedHashMap --- "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" linkedHashMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        linkedHashMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k --- "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" --- v ----"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection9.jpg",alt:"jpg"}}),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection10.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_6-枚举集和映射-enumset-enummap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-枚举集和映射-enumset-enummap"}},[t._v("#")]),t._v(" 6.枚举集和映射 EnumSet EnumMap")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection11.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_7-标识散列映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-标识散列映射"}},[t._v("#")]),t._v(" 7.标识散列映射")]),t._v(" "),a("p",[t._v("IdentifyHashMap  键的散列值是用System.identifyHashCode计算的")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection12.jpg",alt:"jpg"}}),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection13.jpg",alt:"jpg"}}),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection14.jpg",alt:"jpg"}}),t._v(" "),a("h2",{attrs:{id:"_4-视图和包装器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-视图和包装器"}},[t._v("#")]),t._v(" 4.视图和包装器")]),t._v(" "),a("p",[t._v("keySet方法返回一个实现了Set接口的类对象，这个类的方法对原映射进行操作，这种集合称为视图。")]),t._v(" "),a("h3",{attrs:{id:"_1-轻量级集合包装器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-轻量级集合包装器"}},[t._v("#")]),t._v(" 1.轻量级集合包装器")]),t._v(" "),a("p",[t._v("Arrays.asList()方法得到一个List包装器，是视图对象，Collections.nCopies()，存储代价很小，是视图技术的巧妙应用。生成的集合不可变集合。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("视图集合不能add或者remove，否则会抛出java.lang.UnsupportedOperationException异常，以下会报错")])])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testUnChange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" strings "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list --- "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-子范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-子范围"}},[t._v("#")]),t._v(" 2.子范围")]),t._v(" "),a("ul",[a("li",[t._v("针对集合，可以使用subList获取集合的子范围的视图集合。list.subList(index a, index b);包左不包右")]),t._v(" "),a("li",[t._v("如果是Arrays或者Collections获取到的视图集合，执行clear方法会报错，即还是遵循了不可变集合的原则。")])]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection15.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_3-不可修改的视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-不可修改的视图"}},[t._v("#")]),t._v(" 3.不可修改的视图")]),t._v(" "),a("p",[t._v("Collections的以下方法可以获取不可修改的视图，如果试图修改，则会抛出异常")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection16.jpg",alt:"jpg"}}),t._v(" "),a("blockquote",[a("p",[t._v("unmodifiableList和unmodifiableSet仍然使用底层集合的equals和hashCode方法进行比较，而且其他的获取不可修改的试图的，再也无法比较底层集合对象")])]),t._v(" "),a("blockquote",[a("p",[t._v("不可修改试图不是集合本身不能修改，原来的集合仍然可以修改，只是生成的视图集合不可修改 -- unSupportOperationException")])]),t._v(" "),a("h3",{attrs:{id:"_4-同步视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-同步视图"}},[t._v("#")]),t._v(" 4.同步视图")]),t._v(" "),a("p",[t._v("类库的设计者使用视图来保证常规集合的线程安全，而不是使用线程安全的集合类。例如：Collections.synchronizedMap方法可以将任何一个映射表转换成具有同步访问方法的map视图")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection17.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_5-受查视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-受查视图"}},[t._v("#")]),t._v(" 5.受查视图")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection18.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_6-关于可选操作的说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-关于可选操作的说明"}},[t._v("#")]),t._v(" 6.关于可选操作的说明")]),t._v(" "),a("p",[t._v("如果不是可选操作，接口会成倍的增加，让类库设计者无法接受，所以采用这个折中的办法")]),t._v(" "),a("p",[t._v("可选指的是一些集合的keyset，values，entrySet，只可以删除不能添加，Arrays和Collections获取的视图集合，不能add和remove，Arrays和Collections获取的subList子范围，不能clear，否则unSupportOperationException")]),t._v(" "),a("p",[t._v("Collections类：可用于：")]),t._v(" "),a("ul",[a("li",[t._v("1.构造一个集合视图，不可修改，否则unSupportOperationException")]),t._v(" "),a("li",[t._v("2.构造一个集合视图，视图中的方法同步")]),t._v(" "),a("li",[t._v("3.构造一个集合视图，如果插入错误类型，ClassCastException")]),t._v(" "),a("li",[t._v("4.构造一个集合视图，不可修改列表，可以是n个，单个元素")]),t._v(" "),a("li",[t._v("5.构造一个集合视图，空集合，列表，映射，迭代器")])]),t._v(" "),a("p",[t._v("Arrays类： 可用于：")]),t._v(" "),a("ul",[a("li",[t._v("1.asList，构造列表视图，数组可修改，但大小不可变")])]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection19.jpg",alt:"jpg"}}),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection20.jpg",alt:"jpg"}}),t._v(" "),a("h2",{attrs:{id:"_5-算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-算法"}},[t._v("#")]),t._v(" 5.算法")]),t._v(" "),a("p",[t._v("将max方法实现为能接受任何实现Collection接口的对象，这样不用写数组，列表，数据集合的max多个方法，一个便可以，泛型集合的重要概念。")]),t._v(" "),a("h3",{attrs:{id:"_1-排序与混排"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-排序与混排"}},[t._v("#")]),t._v(" 1.排序与混排")]),t._v(" "),a("ul",[a("li",[t._v("Collections.sort(); 或者list.sort();")]),t._v(" "),a("li",[t._v("查看书籍发现很多都是对数组的排序算法，使用随机访问的方式，但是对列表的随机访问方式效率很低。")]),t._v(" "),a("li",[t._v("java使用的是："),a("code",[t._v("将所有元素转入一个数组，然后对数组进行排序，然后排序后的序列复制回列表。")])])]),t._v(" "),a("p",[t._v("下面是有关术语定义：")]),t._v(" "),a("ul",[a("li",[t._v("如果列表支持Set方法，则是可以修改的")]),t._v(" "),a("li",[t._v("如果列表支持add和remove方法，则是可以改变大小的")])]),t._v(" "),a("h3",{attrs:{id:"_2-二分查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-二分查找"}},[t._v("#")]),t._v(" 2.二分查找")]),t._v(" "),a("p",[t._v("集合必须是排好序的，然后查找一半，判断，然后再查找一半，如果数组中有1024个元素，那么大概需要10次查找。如果返回值大于0，则是元素的位置，如返回负值则是没有找到")]),t._v(" "),a("p",[t._v("如果把集合插入到正确的位置。")]),t._v(" "),a("p",[a("strong",[t._v("只有采用随机访问，二分查找才有意义")])]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection21.jpg",alt:"jpg"}}),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testSort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collections")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collections")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("binarySearch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i ---- "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list --- "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection22.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_3-简单算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-简单算法"}},[t._v("#")]),t._v(" 3.简单算法")]),t._v(" "),a("ol",[a("li",[t._v("查找最大值")]),t._v(" "),a("li",[t._v("一个列表元素复制到另一个列表")]),t._v(" "),a("li",[t._v("用一个常量值填充容器")]),t._v(" "),a("li",[t._v("逆置一个列表元素顺序")])]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection23.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_4-批操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-批操作"}},[t._v("#")]),t._v(" 4.批操作")]),t._v(" "),a("p",[t._v("coll1.removeAll(coll2); coll1中删除coll2中出现的元素，coll1.retainAll(coll2); coll1中删除coll2中未出现的元素")]),t._v(" "),a("h3",{attrs:{id:"_5-集合和数组的转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-集合和数组的转换"}},[t._v("#")]),t._v(" 5.集合和数组的转换")]),t._v(" "),a("ul",[a("li",[t._v("Arrays.asList();转换为视图集合")]),t._v(" "),a("li",[t._v("list.toArray()得到的是Object[]数组")]),t._v(" "),a("li",[t._v("想得到相同类型：需要使用变体，list.toArray(new String[0]);")])]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection24.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_6-编写自己的算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-编写自己的算法"}},[t._v("#")]),t._v(" 6.编写自己的算法")]),t._v(" "),a("p",[t._v("使用最通用的集合接口")]),t._v(" "),a("h2",{attrs:{id:"_6-遗留的集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-遗留的集合"}},[t._v("#")]),t._v(" 6.遗留的集合")]),t._v(" "),a("h3",{attrs:{id:"_1-hashtable-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-hashtable-类"}},[t._v("#")]),t._v(" 1.hashtable 类")]),t._v(" "),a("p",[t._v("如果不需要同步使用HashMap，如果需要同步，使用ConcurrentHashMap")]),t._v(" "),a("h3",{attrs:{id:"_2-枚举-enumeration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-枚举-enumeration"}},[t._v("#")]),t._v(" 2.枚举 Enumeration")]),t._v(" "),a("p",[t._v("Collections.enumeration(list)将产生一个枚举对象")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection25.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_3-属性映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-属性映射"}},[t._v("#")]),t._v(" 3.属性映射")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection26.jpg",alt:"jpg"}}),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection27.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_4-栈-stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-栈-stack"}},[t._v("#")]),t._v(" 4.栈 Stack")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection28.jpg",alt:"jpg"}}),t._v(" "),a("h3",{attrs:{id:"_5-位集-bitset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-位集-bitset"}},[t._v("#")]),t._v(" 5.位集 BitSet")]),t._v(" "),a("p",[t._v("存储boolean，比boolean的ArrayList还要高效率")]),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection29.jpg",alt:"jpg"}}),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection30.jpg",alt:"jpg"}}),t._v(" "),a("img",{attrs:{width:"800",src:"https://boonlean15.github.io/cheneyBlog/images/javaImg/collection31.jpg",alt:"jpg"}})])}),[],!1,null,null,null);a.default=e.exports}}]);